from aiogram import types
from aiogram.dispatcher import FSMContext

from loader import dp
from utils.db_api.db_commands import select_user, next_in_line
import kyeboards as kb
from states.take_turn import NumberTurn


@dp.callback_query_handler(text="what are your number")
async def number_turn(call: types.CallbackQuery):
    await call.message.answer('–æ—á—ñ–∫—É–π—Ç–µ, –π–¥–µ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö...')
    text = f"–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –ø–∞—Å–ø–æ—Ä—Ç–∞, —è–∫–∏–π –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –≤ —Å–∏—Å—Ç–µ–º—ñ, –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å /cancel"
    await call.message.answer(text)
    await NumberTurn.Passport.set()


@dp.message_handler(state=NumberTurn.Passport)
async def add_passport(message: types.Message, state: FSMContext):
    answer = message.text.upper()
    await message.answer('–æ—á—ñ–∫—É–π—Ç–µ, –π–¥–µ –æ–±—Ä–æ–±–∫–∞ –¥–∞–Ω–∏—Ö...')
    try:
        txt = f"""
                –í–∞—à –Ω–æ–º–µ—Ä –≤ —á–µ—Ä–∑—ñ ‚Ññ {await select_user(answer)}!
                –ù–∞—Å—Ç—É–ø–Ω–∏–π –Ω–æ–º–µ—Ä –¥–æ —Ä–µ—î—Å—Ç—Ä–∞—Ç–æ—Ä–∞ - ‚Ññ{(await next_in_line())[1]}.
                –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚¨á
        """
        await message.answer(txt, reply_markup=kb.inline_back)
        await state.finish()
    except AttributeError:
        msg_er = "–¢–∞–∫–∏—Ö –¥–∞–Ω–∏—Ö –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ üôà. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É BACK"
        await message.answer(msg_er, reply_markup=kb.inline_back)
        await state.finish()

